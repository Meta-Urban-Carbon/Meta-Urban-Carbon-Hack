<UserControl x:Class="MetaDataHelper.MetaDataHelperPanelUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MetaDataHelper"
             xmlns:userStringClass="clr-namespace:MetaDataHelper"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             Height="Auto"
             Width="Auto"
             d:DesignHeight="450"
             d:DesignWidth="400"
>

    <UserControl.Resources>

        <!-- Converters-->
        <local:StringToBooleanConverter x:Key="StringToBooleanConverter" />
        <local:StringToDoubleConverter x:Key="StringToDoubleConverter" />

        <!-- For String -->
        <DataTemplate x:Key="StringTemplate">
            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>

        <!-- For Select -->
        <DataTemplate x:Key="SelectTemplate">
            <ComboBox ItemsSource="{Binding ValueOptions}"
                      DisplayMemberPath="Option" 
                      SelectedItem="{Binding SelectedValueOption, UpdateSourceTrigger=PropertyChanged}">
            </ComboBox>
        </DataTemplate>

        <!-- For Integer -->
        <DataTemplate x:Key="IntegerTemplate">
            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" 
                     PreviewTextInput="IntergerValidationTextBox"/>
        </DataTemplate>

        <!-- For Double -->
        <DataTemplate x:Key="DoubleTemplate">
            <TextBox 
                Text="{Binding Value,  
                    UpdateSourceTrigger=PropertyChanged,  
                    Converter={StaticResource StringToDoubleConverter}, 
                    ValidatesOnExceptions=True, 
                    NotifyOnValidationError=True}" 
                PreviewTextInput="DoubleValidationTextBox"
            />
        </DataTemplate>

        <!-- For Boolean -->
        <DataTemplate x:Key="BooleanTemplate">
            <CheckBox 
                IsChecked="{Binding Value, 
                    UpdateSourceTrigger=PropertyChanged, 
                    Converter={StaticResource StringToBooleanConverter}}" 
                Content="{Binding Value}"/>
        </DataTemplate>

        <!-- For Gh_Calculated (This is just an example; adjust based on your actual need) -->
        <DataTemplate x:Key="GhCalculatedTemplate">
            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>

        <ObjectDataProvider MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}"
                            x:Key="UserStringValueTypeProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="userStringClass:UserStringValueType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <local:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />

    </UserControl.Resources>


    <Grid>
        <!-- Master Grid Definition -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height ="1"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="Auto"/>
            <RowDefinition Height ="1"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="1" Grid.Column="1"
               Grid.ColumnSpan="3"
               Content="{Binding Message}"/>

        <!-- Saved Templates Row. -->
        <StackPanel Grid.Row="3" Grid.Column="1"
                    Grid.ColumnSpan="5"
                    Orientation="Horizontal">


            <!-- Saved Templates Label. -->
            <Label> Saved Templates: </Label>

            <!-- Saved Templates Dropdown. -->
            <ComboBox Width="150"
                      ItemsSource="{Binding SavedTemplates}"
                      SelectedItem="{Binding SelectedSavedTemplate, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                        <!-- Display property of UserStringTemplate -->
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>


            <!-- Save button -->
            <Button FontSize="10"
                    Padding="2"
                    Margin="2"
                    Command="{Binding SaveCommand}"
                    CommandParameter="{Binding CurrentTemplate}"
                >
                Save
            </Button>

            <!-- Load button -->
            <Button FontSize="10"
                    Padding="2"
                    Margin="2"
                    Command="{Binding LoadCommand}"
                    >
                Load
            </Button>
        </StackPanel>

        <!-- Template Name -->
        <Grid Grid.Row="6" Grid.Column="1" 
              Grid.ColumnSpan="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Name Label. -->
            <Label Grid.Column="0">
                Template Name:
            </Label>

            <!-- Template Name Field. -->
            <TextBox Grid.Column="1" 
                     Text="{Binding CurrentTemplate.Name}">
            </TextBox>

        </Grid>

        <!-- List of User String Deffinitions form Current Template -->
        <DataGrid Grid.Row="8" Grid.Column="1" 
          Grid.ColumnSpan="5"
          ItemsSource="{Binding CurrentTemplate.Collection }"
          CanUserResizeColumns="True"
          AutoGenerateColumns="False">

            <!-- Table. -->
            <DataGrid.Columns>

                <!-- Key Column. -->
                <DataGridTemplateColumn Header="Key" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=Key, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Value Column. -->
                <DataGridTemplateColumn Header="Value" 
                                        Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl 
                                Content="{Binding}" 
                                x:Name="contentControl" />
                            <DataTemplate.Triggers>

                                <!-- String Trigger. -->
                                <DataTrigger 
                                    Binding="{Binding ValueType}" 
                                    Value="{x:Static userStringClass:UserStringValueType.String}">
                                    <Setter 
                                        TargetName="contentControl" 
                                        Property="ContentTemplate" 
                                        Value="{StaticResource StringTemplate}" />
                                </DataTrigger>

                                <!-- Boolean Trigger. -->
                                <DataTrigger 
                                    Binding="{Binding ValueType}" 
                                    Value="{x:Static userStringClass:UserStringValueType.Select}">
                                    <Setter 
                                        TargetName="contentControl"
                                        Property="ContentTemplate" 
                                        Value="{StaticResource SelectTemplate}" />
                                </DataTrigger>
                                
                                <!-- Integer Trigger. -->
                                <DataTrigger 
                                    Binding="{Binding ValueType}" 
                                    Value="{x:Static userStringClass:UserStringValueType.Integer}"
                                    >
                                    <Setter 
                                        TargetName="contentControl" 
                                        Property="ContentTemplate" 
                                        Value="{StaticResource IntegerTemplate}" 
                                        />
                                </DataTrigger>

                                <!-- Double Trigger. -->
                                <DataTrigger 
                                    Binding="{Binding ValueType}" 
                                    Value="{x:Static userStringClass:UserStringValueType.Double}">
                                    <Setter 
                                        TargetName="contentControl" 
                                        Property="ContentTemplate" 
                                        Value="{StaticResource DoubleTemplate}" />
                                </DataTrigger>

                                <!-- Boolean Trigger. -->
                                <DataTrigger 
                                    Binding="{Binding ValueType}" 
                                    Value="{x:Static userStringClass:UserStringValueType.Boolean}">
                                    <Setter TargetName="contentControl" 
                                            Property="ContentTemplate" 
                                            Value="{StaticResource BooleanTemplate}" 
                                            />
                                </DataTrigger>

                                <!-- Gh_Calculated Trigger. -->
                                <DataTrigger 
                                    Binding="{Binding ValueType}" 
                                    Value="{x:Static userStringClass:UserStringValueType.Gh_Calculated}">
                                    <Setter TargetName="contentControl" 
                                            Property="ContentTemplate" 
                                            Value="{StaticResource GhCalculatedTemplate}" 
                                            />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Value Type Column. -->
                <DataGridTemplateColumn Header="Type" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=ValueType, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding Source={StaticResource UserStringValueTypeProvider}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Manage Options Column. -->
                <DataGridTemplateColumn 
                    Header="Manage Option" 
                    Width="25">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button 
                                Content="+/-" 
                                Command="{Binding Path=DataContext.OpenOptionManagerCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                CommandParameter="{Binding}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger 
                                                Binding="{Binding ValueType}" 
                                                Value="{x:Static userStringClass:UserStringValueType.Select}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Remove Row Button. -->
                <DataGridTemplateColumn Header="Remove" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="X" 
                                    Command="{Binding Path=DataContext.CurrentTemplate.RemoveCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    CommandParameter="{Binding}"
                                    ToolTip="Remove this item"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

        <!-- Assign To Selected Rhino Objects.  -->
        <Button Grid.Row="9" Grid.Column="1" 
                Grid.ColumnSpan="2"
                FontSize="10"
                Padding="2"
                Margin="2"
                Command="{Binding AssignTemplateCommand}"
                CommandParameter="Selected"
        >
            Assign To Selected
        </Button>

        <!-- Add Row Button. -->
        <Button Grid.Row="9" Grid.Column="3"
                FontSize="10"
                Padding="2"
                Margin="2"
                Command="{Binding AddUserStringDefinitionCommand}"
                CommandParameter="test"
        >
            Add Key
        </Button>

    </Grid>

</UserControl>
